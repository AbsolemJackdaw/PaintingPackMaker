name: Create Release with Artifacts

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          version: 17

      - name: Download JRE
        run: |
          powershell /c Invoke-Webrequest https://github.com/AdoptOpenJDK/openjdk17-binaries/releases/download/jdk-2021-05-07-13-31/OpenJDK-jre_x64_windows_hotspot_2021-05-06-23-30.zip -OutFile jre.zip
          powershell /c Expand-Archive jre.zip .
          powershell /c Remove-Item jre.zip
          powershell /c Get-ChildItem -Path jdk-17+20-jre

      - name: Create installer and runnable jar
        run: ./gradlew shadowJar createExe

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: 1.0.5
          release_name: 1.0.5
          body: |
            Changes
            - Expand available painting sizes.  
            - Picking a size now fills the size input fields, rather then having two different inputs.  
            - Add dropdown menu to pick a minecraft version so the output resourcepack is compatible with it. 
            - Dropdown menu will disable/enable the 'unique id' text input for the compatible versions.
            Fixes
            - Fix export button sabotaging the import button functionality
          draft: false
          prerelease: false

      - name: Upload exe
        id: upload-exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: /build/launch4j/PPM.exe
          asset_name: PPM.exe
          asset_content_type: application/exe

      - name: Upload jar
        id: upload-jar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: /build/libs/PPM.jar
          asset_name: PPM.jar
          asset_content_type: application/jar
